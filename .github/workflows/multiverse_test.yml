name: "🌠 LIVE - Omnipkg Quantum Multiverse Warp (CORRECTED)"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11 (for the main runner)
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e . redis rich==13.7.1
          
      # This configuration step is correct and can remain.
      - name: Configure omnipkg for non-interactive use
        run: |
          # Your existing python script to create the initial config.json is fine.
          python - << 'EOF'
          # ... (your python config script here) ...
          EOF
          
      - name: Adopt All Required Python Versions
        run: |
          echo "--- Adopting Python Versions for Multiverse Test ---"
          omnipkg python adopt 3.9
          omnipkg python adopt 3.10
          echo "All required Python versions have been adopted!"

      - name: Pre-Install Packages into All Interpreters (THE RIGHT WAY)
        id: preinstall
        run: |
          echo "--- Pre-installing exact rich versions for each Python context ---"

          # Use omnipkg to get the exact path for each interpreter
          PYTHON_39_EXE=$(omnipkg info python | grep 'Python 3.9:' | awk '{print $3}')
          PYTHON_310_EXE=$(omnipkg info python | grep 'Python 3.10:' | awk '{print $3}')
          
          if [ -z "$PYTHON_39_EXE" ] || [ -z "$PYTHON_310_EXE" ]; then
            echo "❌ Failed to get interpreter paths from omnipkg info."
            exit 1
          fi

          echo "Found Python 3.9 Executable: $PYTHON_39_EXE"
          echo "Found Python 3.10 Executable: $PYTHON_310_EXE"

          # --- THIS IS THE CRITICAL FIX ---
          # Instead of swapping, we now execute omnipkg using the specific Python
          # interpreter for the context we want to modify. This guarantees that the
          # command runs in the correct environment.
          
          echo "Installing rich 13.4.2 for Python 3.9..."
          "$PYTHON_39_EXE" -m omnipkg.cli install rich==13.4.2
          
          echo "Installing rich 13.6.0 for Python 3.10..."
          "$PYTHON_310_EXE" -m omnipkg.cli install rich==13.6.0
          
          echo "✅ All packages pre-installed into their respective contexts."

      - name: Run Quantum Multiverse Demo and Verify
        run: |
          echo "--- Running Omnipkg Quantum Multiverse Warp Demo (Option 8) ---"
          # The demo itself is self-contained and manages its own context,
          # so it can be run directly.
          echo "8" | omnipkg demo
