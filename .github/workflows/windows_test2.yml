# .github/workflows/windows_pathing_truth.yml

name: Windows Ground Truth Pathing Test

on:
  push:
    branches:
      - development
  workflow_dispatch:
    inputs:
      branch:
        description: 'The branch to test'
        required: true
        default: 'development'

jobs:
  find-windows-path-truth:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || 'development' }}

      - name: Wipe previous omnipkg config for a true clean run
        run: |
          if (Test-Path ~\.config\omnipkg) {
            Remove-Item ~\.config\omnipkg -Recurse -Force
          }
        shell: pwsh

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install omnipkg (and its dependencies)
        run: pip install -e .
        shell: pwsh

      # --- STEP 1: FIND THE GROUND TRUTH ---
      # As you said, we find a dependency and ask pip where it is.
      - name: Find Ground Truth - Location of 'packaging' dependency
        id: ground_truth # Give this step an ID to reference its output
        run: |
          echo "--- Finding location of a core dependency (packaging)... ---"
          $location = (pip show packaging | Select-String -Pattern "Location:").Line.Split(' ')[1]
          echo "GROUND_TRUTH_PATH=$location" >> $env:GITHUB_OUTPUT
          echo "Pip says the real site-packages path is: $location"
        shell: pwsh

      # --- STEP 2: RUN OMNIPKG TO GENERATE ITS CONFIG ---
      - name: Run omnipkg to trigger config creation
        run: omnipkg status
        shell: pwsh
        env: { PYTHONUTF8: "1" }

      # --- STEP 3: COMPARE TRUTH VS. OMNIPKG'S GUESS ---
      # This is the moment of truth. We compare the real path to the one in the config.
      - name: Compare Ground Truth Path with omnipkg Config Path
        run: |
          echo "--- The Moment of Truth ---"
          $groundTruth = "${{ steps.ground_truth.outputs.GROUND_TRUTH_PATH }}"
          $config = Get-Content ~\.config\omnipkg\config.json | ConvertFrom-Json
          # This next line robustly gets the site_packages_path regardless of the random environment ID
          $omnipkgPath = $config.environments.psobject.properties[0].Value.site_packages_path
          
          echo "Ground Truth Path (from pip): $groundTruth"
          echo "omnipkg Config Path (from json): $omnipkgPath"
          
          if ($groundTruth -ne $omnipkgPath) {
            echo "BUG CONFIRMED: The paths do NOT match."
            exit 1
          } else {
            echo "SUCCESS: The paths match. The bug is elsewhere."
          }
        shell: pwsh
