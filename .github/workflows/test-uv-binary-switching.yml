# Name of the workflow
name: UV Binary Switching

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      test_timeout:
        description: 'Test Timeout in seconds'
        required: false
        default: '300'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "run-demo"
  run-demo-job:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Each step is an item in the list, denoted by a hyphen
      - name: 🧪 Run the Demo - UV Test (Binary Switching)
        id: run_demo
        shell: bash
        run: |
          echo "--- Running Omnipkg Demo for UV Test (Binary Switching) ---"
          mkdir -p /tmp/omnipkg-artifacts
          
          TIMEOUT_SECONDS=${{ github.event.inputs.test_timeout || '300' }}
          echo "Using timeout: ${TIMEOUT_SECONDS} seconds"
          
          # Run demo and capture output
          # The pipe character '|' indicates a literal multiline string
          timeout ${TIMEOUT_SECONDS} bash -c 'echo "2" | omnipkg demo 2>&1 | tee /tmp/omnipkg-artifacts/demo_output.txt'
          DEMO_EXIT_CODE=${PIPESTATUS[0]}
          
          # Save output to GitHub step summary
          echo "## UV Demo Output" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat /tmp/omnipkg-artifacts/demo_output.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          
          if [ $DEMO_EXIT_CODE -eq 0 ]; then
            echo "Demo completed successfully."
            echo "demo_outcome=success" >> $GITHUB_OUTPUT

            # --- CORRECTED DYNAMIC VALIDATION ---
            # This checks the final summary table for PASSED status on all three tests,
            # using a wildcard for the 'main' version to avoid hardcoding.
            if grep -q "main-.*: ✅ PASSED" /tmp/omnipkg-artifacts/demo_output.txt && \
               grep -q "bubble-0.4.30.*: ✅ PASSED" /tmp/omnipkg-artifacts/demo_output.txt && \
               grep -q "bubble-0.5.11.*: ✅ PASSED" /tmp/omnipkg-artifacts/demo_output.txt && \
               grep -q "ALL UV BINARY TESTS PASSED" /tmp/omnipkg-artifacts/demo_output.txt; then
              echo "✅ Verification PASSED: The main environment and both bubbles (0.4.30, 0.5.11) passed their tests."
            else
              echo "❌ Verification FAILED: Key success markers were not found in the final test summary."
              echo "--- Full Demo Output ---"
              cat /tmp/omnipkg-artifacts/demo_output.txt
              exit 1
            fi
            # --- END CORRECTION ---
            
          else
            echo "Demo failed with exit code $DEMO_EXIT_CODE."
            echo "demo_outcome=failure" >> $GITHUB_OUTPUT
            echo "--- Full Demo Output ---"
            cat /tmp/omnipkg-artifacts/demo_output.txt
            exit 1
          fi
