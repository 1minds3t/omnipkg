# .github/workflows/cross_platform_test.yml
name: Cross-Platform Sanity Check
on:
  push:
    branches:
      - development
  workflow_dispatch:
    inputs:
      branch:
        description: 'The branch to test'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - main
          - staging
jobs:
  sanity-check:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || 'development' }}
          
      - name: Display selected branch and OS
        run: |
          echo "Testing on: ${{ matrix.os }}"
          echo "Branch: ${{ github.event.inputs.branch || 'development' }}"
          
      - name: Wipe previous omnipkg config (Windows)
        run: |
          if (Test-Path ~\.config\omnipkg) {
            Remove-Item ~\.config\omnipkg -Recurse -Force
            Write-Host "Cleared omnipkg config"
          } else {
            Write-Host "No previous omnipkg config found"
          }
        shell: pwsh
        if: runner.os == 'Windows'
        continue-on-error: true
        
      - name: Wipe previous omnipkg config (Linux/macOS)
        run: |
          if [ -d ~/.config/omnipkg ]; then
            rm -rf ~/.config/omnipkg
            echo "Cleared omnipkg config"
          else
            echo "No previous omnipkg config found"
          fi
        if: runner.os != 'Windows'
        continue-on-error: true
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
        
      - name: Install omnipkg
        run: pip install -e .
        
      - name: Configure omnipkg for non-interactive use
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            mkdir -p ~/.config/omnipkg
            echo '{"interactive": false, "auto_confirm": true}' > ~/.config/omnipkg/config.json
          else
            mkdir -p ~/.config/omnipkg
            echo '{"interactive": false, "auto_confirm": true}' > ~/.config/omnipkg/config.json
          fi
        shell: bash
        
      - name: Run Demo (Let it handle everything)
        run: |
          echo "--- Running Omnipkg Demo ---"
          echo "Demo will handle adoption, installation, and KB rebuild automatically"
          echo ""
          echo "8" | python -m omnipkg.cli demo
        shell: bash
        env:
          PYTHONUTF8: "1"
